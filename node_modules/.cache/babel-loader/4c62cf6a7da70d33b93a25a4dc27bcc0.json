{"ast":null,"code":"import _slicedToArray from \"/Users/dizi/react/my1app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dizi/react/my1app/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        colorIndex = _React$useState2[0],\n        setColorIndex = _React$useState2[1];\n\n  const colors = [\"blue\", \"green\", \"white\", \"orange\"]; // we are performing a 'side effect' since we are working with an API\n  // we are working with the DOM, a browser API outside of React\n\n  useEffect(() => {\n    document.body.style.backgroundColor = colors[colorIndex];\n  }); // whenever state is updated, App re-renders and useEffect runs\n\n  function handleChangeIndex() {\n    const next = colorIndex + 1 === colors.length ? 0 : colorIndex + 1;\n    setColorIndex(next);\n  }\n\n  return React.createElement(\"button\", {\n    onClick: handleChangeIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Change background color\");\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/dizi/react/my1app/src/index.js"],"names":["React","useState","useEffect","ReactDOM","App","colorIndex","setColorIndex","colors","document","body","style","backgroundColor","handleChangeIndex","next","length","render","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,sDAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,0BACyBJ,KAAK,CAACC,QAAN,CAAe,CAAf,CADzB;AAAA;AAAA,QACJI,UADI;AAAA,QACQC,aADR;;AAEX,QAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,QAA3B,CAAf,CAFW,CAIX;AACA;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCJ,MAAM,CAACF,UAAD,CAA5C;AACD,GAFQ,CAAT,CANW,CASX;;AAEA,WAASO,iBAAT,GAA6B;AAC3B,UAAMC,IAAI,GAAGR,UAAU,GAAG,CAAb,KAAmBE,MAAM,CAACO,MAA1B,GAAmC,CAAnC,GAAuCT,UAAU,GAAG,CAAjE;AACAC,IAAAA,aAAa,CAACO,IAAD,CAAb;AACD;;AAED,SAAO;AAAQ,IAAA,OAAO,EAAED,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;AAEDT,QAAQ,CAACY,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBP,QAAQ,CAACQ,cAAT,CAAwB,MAAxB,CAAxB","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n    const [colorIndex, setColorIndex] = React.useState(0);\n    const colors = [\"blue\", \"green\", \"white\", \"orange\"];\n  \n    // we are performing a 'side effect' since we are working with an API\n    // we are working with the DOM, a browser API outside of React\n    useEffect(() => {\n      document.body.style.backgroundColor = colors[colorIndex];\n    });\n    // whenever state is updated, App re-renders and useEffect runs\n  \n    function handleChangeIndex() {\n      const next = colorIndex + 1 === colors.length ? 0 : colorIndex + 1;\n      setColorIndex(next);\n    }\n  \n    return <button onClick={handleChangeIndex}>Change background color</button>;\n  }\n \n  ReactDOM.render(<App />,document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}